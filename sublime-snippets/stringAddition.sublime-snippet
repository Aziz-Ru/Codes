<snippet>
	<content><![CDATA[
string addStrings(string num1, string num2) {
    string result;
    int carry = 0;
    int i = num1.size() - 1, j = num2.size() - 1;

    while (i >= 0 || j >= 0 || carry) {
        int sum = carry;
        if (i >= 0) sum += num1[i--] - '0';
        if (j >= 0) sum += num2[j--] - '0';
        result += std::to_string(sum % 10);
        carry = sum / 10;
    }
    reverse(result.begin(), result.end());
    return result;
}

string subtractStrings(string num1, string num2) {
    string result;
    int borrow = 0;
    int i = num1.size() - 1, j = num2.size() - 1;

    while (i >= 0 || j >= 0) {
        int x = (i >= 0) ? num1[i--] - '0' : 0;
        int y = (j >= 0) ? num2[j--] - '0' : 0;
        int diff = x - y - borrow;
        if (diff < 0) {
            diff += 10;
            borrow = 1;
        } else {
            borrow = 0;
        }
        result += std::to_string(diff);
    }

    reverse(result.begin(), result.end());
    // Remove leading zeroes
    result.erase(0, min(result.find_first_not_of('0'), result.size() - 1));
    return result;
}]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	 <tabTrigger>S_String_Addition</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	 <scope>source.c++</scope> -->
</snippet>
